{
    "env": {
        "browser": true,
        "es6": true,
        "node": true,
        "mocha": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:react/recommended",
      "airbnb"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2018,
        "sourceType": "module"
    },
    "plugins": [
        "react"
    ],
  "rules": {
      "object-curly-newline": ["error", { "ImportDeclaration": "always", "ExportDeclaration": "never" }],
      "comma-dangle": ["error", "only-multiline"],
      "operator-linebreak": ["error", "after"],
      "import/no-extraneous-dependencies": ["error", {"packageDir": "./"}],
      "implicit-arrow-linebreak": ["error", "below"],
      "no-underscore-dangle": 0,
      "react/prop-types": 0, 
      "react/jsx-filename-extension": 0,
      "react/destructuring-assignment": 0,
      "consistent-return": 0, 
      "react/jsx-props-no-spreading": 0,
      "class-methods-use-this": 0,
      "no-param-reassign": 0, 
      "guard-for-in": 0, 
      "no-restricted-syntax": 0,
      "react/no-access-state-in-setstate": 0
  }, 
  "settings": {
      "react": {
        "createClass": "createReactClass", // Regex for Component Factory to use,
                                           // default to "createReactClass"
        "pragma": "React",  // Pragma to use, default to "React"
        "version": "detect", // React version. "detect" automatically picks the version you have installed.
                             // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                             // default to latest and warns if missing
                             // It will default to "detect" in the future
        "flowVersion": "0.53" // Flow version
      },
      "propWrapperFunctions": [
          // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
          "forbidExtraProps",
          {"property": "freeze", "object": "Object"},
          {"property": "myFavoriteWrapper"}
      ],
      "linkComponents": [
        // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
        "Hyperlink",
        {"name": "Link", "linkAttribute": "to"}
      ]
  }
}